###
Problem 29
Distinct powers

Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

    2^2=4, 2^3=8, 2^4=16, 2^5=32
    3^2=9, 3^3=27, 3^4=81, 3^5=243
    4^2=16, 4^3=64, 4^4=256, 4^5=1024
    5^2=25, 5^3=125, 5^4=625, 5^5=3125

If they are then placed in numerical order, with any repeats removed,
we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 
2 <= a <= 100 and 2 <= b <= 100?
###

isPrime = require("./utils/utils").isPrime
_ = require './utils/underscore-min'

primes = []
for i in [2..100]
  if isPrime(i)
    primes.push i

# descompunerea in factori primi
# returneaza perechile baza base, exponent expo ale descompunerii
primeFactors = (n) ->
  out = []

  if _.contains primes, n
    pair = 
      base: n
      expo:  1
    out.push pair
    return out

  i = 0
  while n isnt 1
    p = 0
    while n % primes[i] is 0
      p++
      n /= primes[i]
    if p 
      pair =
        base: primes[i]
        expo:  p
      out.push pair
    i++

  return out
# end primeFactors

MAX = 100
nums = []

# for n in [2..MAX] nums.push primeFactors(n)

for a in [2..MAX]
  # prime factors of a
  pfa = primeFactors(a)
  for b in [2..MAX]
    # a pow b
    apowb = []
    for factor in pfa
      newfactor = 
        base: factor.base
        expo: factor.expo * b
      apowb.push newfactor
    nums.push apowb

# for n in nums # when n.length > 3
#   console.log n, n.length
console.log nums.length

x = _.map( nums, (elem) ->
  JSON.stringify(elem)
 )

# console.log x
console.log x.length

res = _.uniq(x)

# console.log res
console.log res.length

